@model List<EmployeeAttendenceDataVM>

@{
    ViewData["Title"] = "بيانات حضور الموظفين";
    int i = 1;
    Dictionary<string, string> dayName = new Dictionary<string, string>();
    dayName["Saturday"] = "السبت";
    dayName["Sunday"] = "الأحد";
    dayName["Monday"] = "الإثنين";
    dayName["Tuesday"] = "الثلاثاء";
    dayName["Wednesday"] = "الأربعاء";
    dayName["Thursday"] = "الخميس";
    dayName["Friday"] = "الجمعة";
}
<style>
    td{
       line-height: 100%

    }
</style>

<div class="templatemo-content-container mb-0">
    <div class="templatemo-content-widget white-bg">
        <input type="text" id="search" class="form-control" oninput="searchByEmployeeNameOrDepartmentName()" placeholder="بحث باسم الموظف أو القسم" />
        <span class="text-danger error-msg"></span>
        <div class="d-flex align-items-center gap-3 my-3">
            <span>من</span>
            <input id="from" type="date" class="from form-control datepicker" />
            <span class="text-danger"></span>
            <span>إلى</span>
            <input id="to" type="date" class="form-control datepicker" />
            <span class="to text-danger"></span>

            <button class="btn btn-success" onclick="searchByDate()">بحث</button>
        </div>

    </div>
</div>

<div class="d-flex justify-content-start me-3 mb-4">
    <a class="btn btn-success" asp-action="Add"><i class="fa-solid fa-plus"></i> إضافة حضور وانصراف</a>
</div>

<div id="holidays-table" class="table-content panel panel-default templatemo-content-widget white-bg no-padding templatemo-overflow-hidden">

    <div class="panel-heading templatemo-position-relative " style="background-color:#0d6efd">
        <h2 class="text-uppercase text-center">تقرير حضور وانصراف الموظفين</h2>
    </div>
    @if (Model.Count() != 0)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered ">
                <thead>
                    <tr>
                        <th class="text-center">م</th>
                        <th class="text-center">القسم</th>
                        <th class="text-center">اسم الموظف</th>
                        <th class="text-center">موعد الحضور</th>
                        <th class="text-center">موعد الإنصراف</th>
                        <th class="text-center">التاريخ</th>
                        <th class="text-center">العمليات</th>
                    </tr>
                </thead>
                <tbody>
                    
                    @foreach (var attend in Model)
                    {
                        <tr id="id-@attend.Id">
                            <td class="text-center">@(i++)</td>
                            <td class="text-center">@attend.DepartmentName</td>
                            <td class="text-center">@attend.EmployeeName</td>
                            <td class="text-center">@attend.AttendenceTime.ToString("HH:mm")</td>
                            <td class="text-center">@attend.LeavingTime.ToString("HH:mm")</td>
                            <td class="text-center">@dayName[attend.DayDate.DayOfWeek.ToString()] : @attend.DayDate.ToString("dd/MM/yyyy") </td>
                            <td class="text-center">
                                <a asp-action="Edit" asp-route-id="@attend.Id" class="bi bi-pencil-square text-warning fs-5"></a>
                                <i style="cursor:pointer" onclick="DeleteAttendance(@attend.Id)" class="bi bi-trash3-fill text-danger fs-5"></i>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center">
            <img class="no-data" src="~/images/table no data.gif" alt="لا توجد أجازات" title="لا توجد أجازات">
        </div>
    }
</div>


@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        function searchByEmployeeNameOrDepartmentName() {
            var input = document.querySelector('#search').value.trim();
            var tbody = document.querySelector('tbody')
            var employees = @Html.Raw(Json.Serialize(Model));
            var error = document.querySelector('.error-msg');
            tbody.innerHTML = ''
            let i=1
            error.innerHTML = ''
            employees.forEach((emp, index) => {
                console.log(input, emp["departmentName"])
                if (emp["employeeName"].includes(input) || emp["departmentName"].includes(input)) {
                    
                    let date = Date.parse(emp["attendenceTime"])
                    const attendance = new Date(date);
                    
                    date = Date.parse(emp["leavingTime"])
                    const leaving = new Date(date);
                    
                    date = Date.parse(emp["dayDate"])
                    date = new Date(date);
                    const day = date.getDate().toString().padStart(2, '0');
                    const month = (date.getMonth() + 1).toString().padStart(2, '0');
                    const year = date.getFullYear().toString();

                    const dayDate = `${day}/${month}/${year}`;

                    const daysOfWeek = ['الأحد', 'الإثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'];

                    tbody.innerHTML += `<tr id="id-${emp["employeeId"]}">
                                            <td class="text-center">${i++}</td>
                                            <td class="text-center">${emp["departmentName"]}</td>
                                            <td class="text-center">${emp["employeeName"]}</td>
                                            <td class="text-center">
                                                ${attendance.getHours() > 9 ? attendance.getHours() : '0' + attendance.getHours()}:${attendance.getMinutes() > 9 ? attendance.getMinutes() : '0' + attendance.getMinutes()}
                                            </td>
                                            <td class="text-center">
                                                ${leaving.getHours() > 9 ? leaving.getHours() : '0' + leaving.getHours()}:${leaving.getMinutes() > 9 ? leaving.getMinutes() : '0' + leaving.getMinutes()}
                                            </td>
                                                    <td class="text-center">${daysOfWeek[date.getDay()]} : ${dayDate}</td>
                                            <td class="text-center">
                                                        <a href="/Attendence/Edit/${emp.id}" class="bi bi-pencil-square text-warning fs-5"></a>
                                                        <i style="cursor:pointer" onclick="DeleteAttendance('${emp.id}')" class="bi bi-trash3-fill text-danger fs-5"></i>
                                            </td>
                                        </tr>`
                    error.innerHTML = ''
                } else {
                    error.innerHTML = 'من فضلك أدخل اسم موظف صالح'
                }
            })
        }

        function searchByDate() {
            var from = document.querySelector('#from').value
            var to = document.querySelector('#to').value
            

            $.ajax({
                url: `/Attendence/SearchByDate?startDate=${from}&endDate=${to}`,
                method: 'GET',
                success: function (response) {
                    //console.log(response)
                    setEmployeesAttendance(response)
                },
                error: function (xhr, status, error) {
                    console.log('Request failed:', xhr.responseText);
                }
            });
        }

        function setEmployeesAttendance(employees) {
            var tbody = document.querySelector('tbody')
            tbody.innerHTML = ''
            let i=1
            employees.forEach((emp, index) => {
                let date = Date.parse(emp["attendenceTime"])
                const attendance = new Date(date);

                date = Date.parse(emp["leavingTime"])
                const leaving = new Date(date);

                date = Date.parse(emp["dayDate"])
                date = new Date(date);
                const day = date.getDate().toString().padStart(2, '0');
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const year = date.getFullYear().toString();

                const dayDate = `${day}/${month}/${year}`;

                const daysOfWeek = ['الأحد', 'الإثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'];

                tbody.innerHTML += `<tr id="id-${emp["employeeId"]}">
                                        <td class="text-center">${i++}</td>
                                        <td class="text-center">${emp["departmentName"]}</td>
                                        <td class="text-center">${emp["employeeName"]}</td>
                                        <td class="text-center">
                                            ${attendance.getHours() > 9 ? attendance.getHours() : '0' + attendance.getHours()}:${attendance.getMinutes() > 9 ? attendance.getMinutes() : '0' + attendance.getMinutes()}
                                        </td>
                                        <td class="text-center">
                                            ${leaving.getHours() > 9 ? leaving.getHours() : '0' + leaving.getHours()}:${leaving.getMinutes() > 9 ? leaving.getMinutes() : '0' + leaving.getMinutes()}
                                        </td>
                                        <td class="text-center">${daysOfWeek[date.getDay()]} : ${dayDate}</td>
                                        <td class="text-center">
                                                    <a href="/Attendence/Edit/${emp.id}" class="bi bi-pencil-square text-warning fs-5"></a>
                                                    <i style="cursor:pointer" onclick="DeleteAttendance('${emp.id}')" class="bi bi-trash3-fill text-danger fs-5"></i>
                                        </td>
                                    </tr>`
            })
        }

        function DeleteAttendance(id) {
            Swal.fire({
                title: 'هل أنت متأكد من الحذف؟',
                text: "لن تستطيع استعادته!!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'نعم',
                cancelButtonText: 'لا'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Attendence/delete/${id}`,
                        method: 'GET',
                        success: function (response) {
                            let row = document.querySelector('#id-' + id)
                            let body = document.querySelector('tbody')
                            body.removeChild(row);
                            console.log('Request succeeded:', response);
                        },
                        error: function (xhr, status, error) {
                            console.log('Request failed:', xhr.responseText);
                        }
                    });
                }
            })
        }
    </script>
}

<style>
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 10px;
    }

        .pagination a {
            color: #333;
            text-decoration: none;
            padding: 5px 10px;
            margin: 0 5px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

            .pagination a:hover {
                background-color: #f5f5f5;
            }

        .pagination .active {
            background-color: #007bff;
            color: #fff;
        }
</style>